{"version":3,"sources":["contexts/TodoContext.js","components/Navbar.js","components/Home.js","components/About.js","components/Add.js","components/Delete.js","App.js","serviceWorker.js","index.js"],"names":["TodoContext","createContext","TodoContextProvider","state","todos","fetchData","a","axios","get","response","setState","data","addData","todo","post","unshift","Provider","value","this","props","children","React","Component","Navbar","className","style","textTransform","to","Home","context","class","map","deleteLink","id","completed","marginTop","title","href","marginLeft","contextType","About","Add","onChangeHandler","e","target","name","onRadioClick","checked","onSubmit","preventDefault","newTodo","history","push","maxWidth","margin","padding","action","bind","type","onChange","required","for","data-open","Delete","todoName","url","match","params","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.265ed08e.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport axios from 'axios'\n\nexport const TodoContext = createContext();\n\nclass TodoContextProvider extends React.Component {\n\n    state = {\n        todos: []\n    }\n\n    fetchData = async () => {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n        this.setState({\n            todos: response.data\n        });\n    }\n\n    addData = async (todo) => {\n        const response = await axios.post('https://jsonplaceholder.typicode.com/todos', todo);\n        const { todos } = this.state;\n        todos.unshift(response.data);\n        this.setState({\n            todos: todos\n        });\n    }\n\n    render() {\n        return (\n            <TodoContext.Provider value={{...this.state, fetchData: this.fetchData, addData: this.addData}}>\n                {this.props.children}\n            </TodoContext.Provider>\n        );\n    }\n}\n\nexport default TodoContextProvider;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends React.Component {\n    render() {\n        return (\n            <div className=\"top-bar\">\n              <div className=\"top-bar-left\">\n                  <ul className=\"menu\">\n                      <li className=\"menu-text\">Complete React</li>\n                      <li><Link style={{textTransform: \"uppercase\"}} to=\"/\"><small>Home</small></Link></li>\n                      <li><Link style={{textTransform: \"uppercase\"}} to=\"/add\"><small>Add todo</small></Link></li>\n                      <li><Link style={{textTransform: \"uppercase\"}} to=\"/about\"><small>About</small></Link></li>\n                  </ul>\n              </div>\n          </div>\n        );\n    }\n}","import React from 'react';\nimport { TodoContext } from '../contexts/TodoContext'\nimport { Link } from \"react-router-dom\";\n\nexport default class Home extends React.Component {\n    static contextType = TodoContext;\n\n    async componentDidMount() {\n        const { fetchData } = this.context;\n        await fetchData();\n    }\n\n    render() {\n        const { todos } = this.context;\n\n        return (\n            <div class=\"grid-x grid-margin-x\">\n\t        \t{todos.map(todo => {\n                    const deleteLink = \"/delete/\" + todo.id;\n\t        \t\treturn (\n\t\t\t\t\t\t<div class=\"cell medium-6 large-4\">\n\t\t\t\t\t\t  \t<div className={'callout ' + (todo.completed ? \"success\" : \"secondary\")} style={{ marginTop: \"10px\" }}>\n\t\t\t\t\t\t\t\t <p>{todo.title}\n\t\t\t\t\t\t\t\t </p>\n\t\t\t\t\t\t\t\t <a href=\"/\" style={{ textTransform : \"uppercase\" }}><small>Edit</small></a>\n\t\t\t\t\t\t\t\t <Link to={deleteLink} style={{ textTransform : \"uppercase\", marginLeft: \"10px\" }}><small>Delete</small></Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t        \t})}\t\n\t\t\t</div>\n        );\n    }\n}","import React from 'react';\n\nexport default class About extends React.Component {\n    render() {\n        return (\n            <div className=\"callout\" style={{marginTop: \"10px\"}}>\n\t\t\t  <h5><strong>Complete React</strong></h5>\n\t\t\t  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem numquam quod porro id laboriosam, dolorum excepturi tempore architecto dolorem quisquam assumenda repellat, delectus, quasi itaque, nisi eius distinctio tenetur culpa?</p>\n\t\t\t  <a href=\"/\">It's dangerous to go alone, take this.</a>\n\t\t\t</div>\n        );\n    }\n}","import React from 'react';\nimport { TodoContext } from '../contexts/TodoContext'\n\n\nexport default class Add extends React.Component {\n    static contextType = TodoContext;\n\n    state = {\n        completed: false,\n        title: \"\"\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    onRadioClick = (e) => {\n        this.setState({\n            [e.target.name]: e.target.checked\n        })\n    }\n\n    onSubmit = async (e) => {\n        const { addData } = this.context;\n\n        e.preventDefault();\n\n        const newTodo = {\n            title: this.state.title,\n            completed: this.state.completed\n        }\n\n        await addData(newTodo);\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div style={{maxWidth: \"900px\", margin: \"20px auto\", padding: \"0 15px\"}}>\n\t            <h4 className=\"lex\"><strong>Add Todo</strong></h4>\n\t            <hr/>\n\t            <form action=\"\" onSubmit={this.onSubmit.bind(this)}>\n\t            <div className=\"w3-section\">\n\t\t            <label>Title</label>\n\t\t            <input type=\"text\" name=\"title\" onChange={this.onChangeHandler} required=\"required\" className=\"radius\" />\n\t\t\t\t</div>\n\t\t\t\t <input id=\"checkbox22\" onChange={this.onRadioClick} name=\"completed\" type=\"checkbox\" /><label for=\"checkbox22\">Completed</label>\n\t\t\t\t <br/>\n\t\t\t\t <br/>\n\t\t\t\t <button data-open=\"modal-sorry\" id=\"myAnchor\" type=\"submit\" className=\"button radius\">Add Todo</button>\n\t\t\t\t</form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nexport default class Delete extends React.Component {\n    state = {\n        todoName: \"\"\n    }\n\n    async componentDidMount() {\n        const url = \"https://jsonplaceholder.typicode.com/todos/\" + this.props.match.params.id;\n        const response = await axios.get(url);\n        this.setState({\n            todoName: response.data.title\n        })\n    }\n\n    render() {\n        return (\n            <div class=\"callout alert\" style={{ marginTop: \"10px\" }}>\n\t\t\t  <p>Do you really want to delete <strong>{this.state.todoName}</strong>?</p>\n\t\t\t</div>\n        );\n    }\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport TodoContextProvider from './contexts/TodoContext'\n\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Add from './components/Add'\nimport Delete from './components/Delete'\n\nfunction App() {\n    return (\n\n        <TodoContextProvider>\n              <Router>\n              <Navbar />\n                <Switch>\n                  <div className=\"grid-container\">\n                      <Route exact path=\"/\" component={Home} />\n                      <Route exact path=\"/about\" component={About} />\n                      <Route exact path=\"/add\" component={Add} />\n                      <Route exact path=\"/delete/:id\" component={Delete} />\n                  </div>\n                </Switch>\n            </Router>\n        </TodoContextProvider>\n    );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}